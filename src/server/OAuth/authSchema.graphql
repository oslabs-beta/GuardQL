type Mutation {
  login(input: LoginInput!): AuthPayload!
  createUser(input: CreateUserInput!): CreateUserResponse!
}


# type Query {
#   getRequestTime(input: RequestTimeInput!): getRequestTimeResponse!
# }

# input RequestTimeInput {
#   projectId: String!
#   operation_name: String!
# }

# type getRequestTimeResponse {
#   requestTimeData: [RequestTime!]!
# }

# type RequestTime {
#   request_time: Int!
#   date: String!
#   time: String!
# }


input LoginInput {
  username: String!
  password: String!
}

input CreateUserInput {
  username: String!
  password: String!
  email: String!
}

type AuthPayload {
  user: User!
  token: String!
}

type CreateUserResponse {
  code: Int!
  success: Boolean!
  message: String!
}

type User {
  id: ID!
  username: String!
}

input LoginInput {
  username: String!
  password: String!
}

# type Query {
#   getAllUsers: [User!]!
# }
